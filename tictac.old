
	' TIC TAC TOE by Rick Adams

	' Randomize the RND function
	x = rnd(-timer)

	' Reset machine on BREAK
	on brk goto 1000

	' Init video
	width 40

	' Allocate arrays
	dim a(9), c(24)

	' Define the 8 winning lines
	for i = 1 to 24
		read c(i)
	next i

	' Horizontal lines
	data 1, 2, 3
	data 4, 5, 6
	data 7, 8, 9

	' Vertical lines
	data 1, 4, 7
	data 2, 5, 8
	data 3, 6, 9

	' Diagonal lines
	data 1, 5, 9
	data 3, 5, 7

	' Game title
5	print
	print "TIC TAC TOE"

	' Show board positions
	for i = 1 to 9
		a(i) = i + 16 ' "1" through "9"
	next i
	gosub 100

	' Clear board
	for i = 1 to 9
		a(i) = 0
	next i

	' Input player's move
10	print
	print "Your move";
	input m

	' Validate move
	m = int(m)
	if m < 1 or m > 9 then
		print "Illegal move"
		goto 10
	end if
	if a(m) > 0 then
		print "Square occupied"
		goto 10
	end if

	' Make player's move
25	a(m) = 56 ' "X"

	' Display the board
	gosub 100

	' Evaluate game state
	gosub 300
	if x = 3 then 30
	if n = 24 then 40

	' Make computer move
	gosub 200

	' Display the board
	gosub 100

	' Evaluate game state
	gosub 300
	if o = 3 then 35
	if n = 24 then 40

	' Keep playing
	goto 10

30	print
	print "Player wins!"
	goto 5

35	print
	print "Computer wins!"
	goto 5

40	print
	print "Tie game!"
	goto 5

	' Display Tic Tac Toe board
100	print
	for i = 1 to 3
		print " ";
		for j = 1 to 3
			k = (i - 1) * 3 + j
			print chr$(a(k) + 32);
			if j < 3 then
				print " ! ";
			end if
		next j
		print
		if i <> 3 then
			print "---+---+---"
		end if
	next i
	return

	' Make the computer's move
200	gosub 400		' Look for winning or blocking move
	if m <> 0 then 220	' Found a winning or blocking move?
	if a(5) > 0 then 210	' No: can we take the center square?
	m = 5			' Take center square
	goto 220
210	m = int(9 * rnd(0)) + 1	' Try random move as a Hail Mary
	if a(m) <> 0 then 210	' Keep trying till an empty cell found
220	a(m) = 47 ' "O"		' Make the move
	print
	print "Computer's move:"; m
	return

	' Evaluate game state
300	n = 0
	for i = 1 to 22 step 3		' Examine each of 8 lines
		x = 0			' Number of Xs in line
		o = 0			' Number of Os in line
		for j = i to i + 2
			if a(c(j)) = 0 then 310
				n = n + 1	' One more occupied cell
310			if a(c(j)) <> 56 then 320
				x = x + 1	' One more X in this line
320			if a(c(j)) <> 47 then 330
				o = o + 1	' One more O in this line
330		next j
		if x <> 3 then 340	' Line has all Xs?
			return		' X wins
340		if o <> 3 then 350	' Line has all Os?
			return		' O wins
350		if n <> 24 then 360	' Every cell of every line filled?
			return		' Tie game
360	next i
	return

	' Find any winning or blocking moves for computer's turn
400	m = 0	' No move decision yet
	w = 0	' No winning move yet
	b = 0	' No blocking move yet
	for i = 1 to 22 step 3		' Examine each of 8 lines
		n = 0			' Number of Xs and Os in line
		x = 0			' Number of Xs in line
		o = 0			' Number of Os in line
		e = 0			' Index of empty cell
		for j = i to i + 2
			if a(c(j)) <> 56 then 420
				x = x + 1	' One more X in this line
				n = n + 1
420			if a(c(j)) <> 47 then 430
				o = o + 1	' One more O in this line
				n = n + 1
430			if a(c(j)) > 0 then 440
				e = c(j)	' Index of empty cell
440		next j
		if n = 3 then 460	' Line is full? No moves there!
		if o <> 2 then 450	' Line has two Os?
			w = e		' Winning move
450		if x <> 2 then 460	' Line has two Xs?
			b = e		' Blocking move
460	next i
	if w = 0 then 470	' Take winning move if there is one
		m = w
		return
470	if b = 0 then 480	' Take blocking move if there is one
		m = b
480	return

	' Reset the machine
1000	poke &h71, 0
	exec &h8c1b
